dat$condition
as.POSIXct(paste(dat$date, dat$time), format = "%d/%m/%Y %H:%M:%S")
rawdata[rawdata$screen == "demographics_debrief", "time_elapsed"] / 1000 / 60
paste(dat$browser, dat$browser_version)
for (file in files) {
progbar$tick()
rawdata <- read.csv(paste0(path, "/", file))
# Initialize participant-level data
dat <- rawdata[rawdata$screen == "browser_info", ]
data_ppt <- data.frame(
Participant = file
Recruitment = dat$researcher,
dat$researcher
for (file in files) {
progbar$tick()
rawdata <- read.csv(paste0(path, "/", file))
# Initialize participant-level data
dat <- rawdata[rawdata$screen == "browser_info", ]
data_ppt <- data.frame(
Participant = file,
Recruitment = dat$researcher,
# Condition = dat$condition,
Experiment_StartDate = as.POSIXct(paste(dat$date, dat$time), format = "%d/%m/%Y %H:%M:%S"),
# Experiment_Duration = rawdata[rawdata$screen == "demographics_debrief", "time_elapsed"] / 1000 / 60,
Browser_Version = paste(dat$browser, dat$browser_version),
Mobile = dat$mobile,
Platform = dat$os,
Screen_Width = dat$screen_width,
Screen_Height = dat$screen_height
)
if("prolific_id" %in% colnames(dat)){
data_ppt$Prolific_ID <- dat$prolific_id
}
}
data_ppt$Prolific_ID
rawdata
files
rawdata
data_ppt$Reward <- rawdata[rawdata$screen == "demographics_debrief", "Reward"]
data_ppt$Reward
# Demographics
demog <- jsonlite::fromJSON(rawdata[rawdata$screen == "demographic_questions", ]$response)
demog
#Discipline
demog$Discipline <- ifelse(demog$Discipline == "other", demog$`Discipline-Comment`, demog$Discipline)
demog$Discipline
demog <- as.data.frame(demog)
demog
demog$Ethnicity
progbar$tick()
alldata <- data.frame()
for (file in files) {
progbar$tick()
rawdata <- read.csv(paste0(path, "/", file))
# Initialize participant-level data
dat <- rawdata[rawdata$screen == "browser_info", ]
data_ppt <- data.frame(
Participant = file,
Recruitment = dat$researcher,
# Condition = dat$condition,
Experiment_StartDate = as.POSIXct(paste(dat$date, dat$time), format = "%d/%m/%Y %H:%M:%S"),
# Experiment_Duration = rawdata[rawdata$screen == "demographics_debrief", "time_elapsed"] / 1000 / 60,
Browser_Version = paste(dat$browser, dat$browser_version),
Mobile = dat$mobile,
Platform = dat$os,
Screen_Width = dat$screen_width,
Screen_Height = dat$screen_height
)
if("prolific_id" %in% colnames(dat)){
data_ppt$Prolific_ID <- dat$prolific_id
}
data_ppt$Reward <- rawdata[rawdata$screen == "demographics_debrief", "Reward"]
# Demographics
demog <- jsonlite::fromJSON(rawdata[rawdata$screen == "demographic_questions", ]$response)
#Education
demog$Education <- ifelse(demog$Education == "other", demog$`Education-Comment`, demog$Education)
demog$`Education-Comment` <- NULL
#Discipline
demog$Discipline <- ifelse(demog$Discipline == "other", demog$`Discipline-Comment`, demog$Discipline)
demog$`Discipline-Comment` <- NULL
#ethnicity
demog$Ethnicity <- ifelse(!is.null(demog$Ethnicity), demog$Ethnicity, NA)
demog$Ethnicity <- ifelse(demog$Ethnicity == "other", demog$`Ethnicity-Comment`, demog$Ethnicity)
demog$`Ethnicity-Comment` <- NULL
}
demog$Ethnicity <- ifelse(!is.null(demog$Ethnicity), demog$Ethnicity, NA)
demog$Ethnicity <- ifelse(demog$Ethnicity == "other", demog$`Ethnicity-Comment`, demog$Ethnicity)
demog$`Ethnicity-Comment` <- NULL
demog
demog <- as.data.frame(demog)
demog
demog$`Discipline-Comment` <- NULL
demog
#Discipline
demog$Discipline <- ifelse(demog$Discipline == "other", demog$`Discipline-Comment`, demog$Discipline)
demog$`Discipline-Comment` <- NULL
demog
alldata <- data.frame()
for (file in files) {
progbar$tick()
rawdata <- read.csv(paste0(path, "/", file))
# Initialize participant-level data
dat <- rawdata[rawdata$screen == "browser_info", ]
data_ppt <- data.frame(
Participant = file,
Recruitment = dat$researcher,
# Condition = dat$condition,
Experiment_StartDate = as.POSIXct(paste(dat$date, dat$time), format = "%d/%m/%Y %H:%M:%S"),
# Experiment_Duration = rawdata[rawdata$screen == "demographics_debrief", "time_elapsed"] / 1000 / 60,
Browser_Version = paste(dat$browser, dat$browser_version),
Mobile = dat$mobile,
Platform = dat$os,
Screen_Width = dat$screen_width,
Screen_Height = dat$screen_height
)
if("prolific_id" %in% colnames(dat)){
data_ppt$Prolific_ID <- dat$prolific_id
}
data_ppt$Reward <- rawdata[rawdata$screen == "demographics_debrief", "Reward"]
# Demographics
demog <- jsonlite::fromJSON(rawdata[rawdata$screen == "demographic_questions", ]$response)
#Education
demog$Education <- ifelse(demog$Education == "other", demog$`Education-Comment`, demog$Education)
demog$`Education-Comment` <- NULL
# #Discipline
# demog$Discipline <- ifelse(demog$Discipline == "other", demog$`Discipline-Comment`, demog$Discipline)
# demog$`Discipline-Comment` <- NULL
#ethnicity
demog$Ethnicity <- ifelse(!is.null(demog$Ethnicity), demog$Ethnicity, NA)
demog$Ethnicity <- ifelse(demog$Ethnicity == "other", demog$`Ethnicity-Comment`, demog$Ethnicity)
demog$`Ethnicity-Comment` <- NULL
demog <- as.data.frame(demog)
data_ppt <- cbind(data_ppt, demog)
}
data_ppt
demog <- as.data.frame(demog)
data_ppt
cbind(data_ppt, demog)
data_ppt
demog
data_ppt
demog <- as.data.frame(demog)
demog
as.data.frame(demog)
data_ppt$Reward <- rawdata[rawdata$screen == "demographics_debrief", "Reward"]
# Demographics
demog <- jsonlite::fromJSON(rawdata[rawdata$screen == "demographic_questions", ]$response)
demog
# #Discipline
demog$Discipline <- ifelse(!is.null(demog$Discipline), demog$Discipline, NA)
demog$Discipline <- ifelse(demog$Discipline == "other", demog$`Discipline-Comment`, demog$Discipline)
demog$`Discipline-Comment` <- NULL
#ethnicity
demog$Ethnicity <- ifelse(!is.null(demog$Ethnicity), demog$Ethnicity, NA)
demog$Ethnicity <- ifelse(demog$Ethnicity == "other", demog$`Ethnicity-Comment`, demog$Ethnicity)
demog$`Ethnicity-Comment` <- NULL
demog
demog <- as.data.frame(demog)
data_ppt <- cbind(data_ppt, demog)
# Feedback
feedback <- jsonlite::fromJSON(rawdata[rawdata$screen == "experiment_feedback", "response"])
rawdata$screen == "experiment_feedback"
rawdata$screen
jsonlite::fromJSON(rawdata[rawdata$pcs_handlowering_a])
screen
rawdata
jsonlite::fromJSON(rawdata[rawdata$screen == "HandLowering_r", "response")
jsonlite::fromJSON(rawdata[rawdata$screen == "HandLowering_r", "response"])
alldata <- data.frame()
for (file in files) {
progbar$tick()
rawdata <- read.csv(paste0(path, "/", file))
# Initialize participant-level data
dat <- rawdata[rawdata$screen == "browser_info", ]
data_ppt <- data.frame(
Participant = file,
Recruitment = dat$researcher,
# Condition = dat$condition,
Experiment_StartDate = as.POSIXct(paste(dat$date, dat$time), format = "%d/%m/%Y %H:%M:%S"),
# Experiment_Duration = rawdata[rawdata$screen == "demographics_debrief", "time_elapsed"] / 1000 / 60,
Browser_Version = paste(dat$browser, dat$browser_version),
Mobile = dat$mobile,
Platform = dat$os,
Screen_Width = dat$screen_width,
Screen_Height = dat$screen_height
)
if("prolific_id" %in% colnames(dat)){
data_ppt$Prolific_ID <- dat$prolific_id
}
data_ppt$Reward <- rawdata[rawdata$screen == "demographics_debrief", "Reward"]
# Demographics
demog <- jsonlite::fromJSON(rawdata[rawdata$screen == "demographic_questions", ]$response)
#Education
demog$Education <- ifelse(demog$Education == "other", demog$`Education-Comment`, demog$Education)
demog$`Education-Comment` <- NULL
# #Discipline
demog$Discipline <- ifelse(!is.null(demog$Discipline), demog$Discipline, NA)
demog$Discipline <- ifelse(demog$Discipline == "other", demog$`Discipline-Comment`, demog$Discipline)
demog$`Discipline-Comment` <- NULL
#ethnicity
demog$Ethnicity <- ifelse(!is.null(demog$Ethnicity), demog$Ethnicity, NA)
demog$Ethnicity <- ifelse(demog$Ethnicity == "other", demog$`Ethnicity-Comment`, demog$Ethnicity)
demog$`Ethnicity-Comment` <- NULL
demog <- as.data.frame(demog)
data_ppt <- cbind(data_ppt, demog)
# Questionnaire
pcs_handlow <- jsonlite::fromJSON(rawdata[rawdata$screen == "HandLowering_r", "response"])
}
data_ppt
rawdata$screen
jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_handlowering_r", "response"])
pcs_handslow <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_handlowering_r", "response"])
pcs_magnetichands <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_magnetichands_r", "response"])
pcs_mosquito <- jsonlite::fromJSON(rawdata[radata$screen = "pcs_mosquito_r", "response"])
pcs_handslow <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_handlowering_r", "response"])
pcs_magnetichands <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_magnetichands_r", "response"])
pcs_mosquito <- jsonlite::fromJSON(rawdata[radata$screen == "pcs_mosquito_r", "response"])
pcs_handslow <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_handlowering_r", "response"])
pcs_magnetichands <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_magnetichands_r", "response"])
pcs_mosquito <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_mosquito_r", "response"])
pcs_armrigidity <- jsonlite::fromJSON((rawdata[rawdata$screen == "pcs_armrigidity_r", "response"]))
pcs_armimmobile <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_armrimmobile_r"])
rawdata[rawdata$screen == "pcs_armrigidity_r", "response"]
pcs_armrigidity <- jsonlite::fromJSON((rawdata[rawdata$screen == "pcs_armrigidity_r", "response"]))
pcs_music <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_music_r", "response"])
pcs_pss <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_press_r", "response"])
pcs_rememeber <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_remember_r", "response"))
pcs_rememeber <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_remember_r", "response"))
pcs_rememeber <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_remember_r", "response"])
pcs_taste <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_taste_r", "response"])
pcs_negative <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_balls_mc", "response"])
rawdata[rawdata$screen == "pcs_balls_mc"
rawdata[rawdata$screen == "pcs_balls_mc", "response"]
rawdata[rawdata$screen == "pcs_balls_mc", "response"]
jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_balls_mc", "response"[2]
rawdata[rawdata$screen[2] == "pcs_balls_mc", "response"]
rawdata[rawdata$screen[2] == "pcs_balls_mc", "response"]
rawdata[rawdata$screen[1] == "pcs_balls_mc", "response"]
rawdata[rawdata$screen == "pcs_balls_mc", "response"[1]
rawdata[rawdata$screen == "pcs_balls_mc", "response"][2]
rawdata[rawdata$screen == "pcs_balls_mc", "response"]
pcs_handslow
# PCS ratings
data_ppt$pcs_handslow <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_handlowering_r", "response"])
data_ppt$pcs_handslow
data_ppt$Reward
data_ppt$pcs_handslow <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_handlowering_r", "response"])
data_ppt$pcs_magnetichands <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_magnetichands_r", "response"])
data_ppt$pcs_mosquito <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_mosquito_r", "response"])
data_ppt$pcs_armrigidity <- jsonlite::fromJSON((rawdata[rawdata$screen == "pcs_armrigidity_r", "response"]))
data_ppt$pcs_armimmobile <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_armrimmobile_r"])
# PCS ratings
data_ppt$pcs_handslow <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_handlowering_r", "response"])
data_ppt$pcs_magnetichands <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_magnetichands_r", "response"])
data_ppt$pcs_mosquito <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_mosquito_r", "response"])
data_ppt$pcs_armrigidity <- jsonlite::fromJSON((rawdata[rawdata$screen == "pcs_armrigidity_r", "response"]))
data_ppt$pcs_armimmobile <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_armrimmobile_r", "response"])
data_ppt$pcs_music <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_music_r", "response"])
data_ppt$pcs_pss <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_press_r", "response"])
rawdata[rawdata$screen == "pcs_press_r", "response"]
rawdata$screen
# PCS ratings
data_ppt$pcs_handslow <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_handlowering_r", "response"])
data_ppt$pcs_magnetichands <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_magnetichands_r", "response"])
data_ppt$pcs_mosquito <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_mosquito_r", "response"])
data_ppt$pcs_armrigidity <- jsonlite::fromJSON((rawdata[rawdata$screen == "pcs_armrigidity_r", "response"]))
data_ppt$pcs_armimmobile <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_armrimmobile_r", "response"])
data_ppt$pcs_music <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_music_r", "response"])
data_ppt$pcs_pss <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_pss_r", "response"])
jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_pss_r", "response"])
rawdata[rawdata$screen == "pcs_pss_r", "response"]
data_ppt$pcs_handslow <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_handlowering_r", "response"])
data_ppt$pcs_magnetichands <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_magnetichands_r", "response"])
data_ppt$pcs_mosquito <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_mosquito_r", "response"])
data_ppt$pcs_armrigidity <- jsonlite::fromJSON((rawdata[rawdata$screen == "pcs_armrigidity_r", "response"]))
data_ppt$pcs_armimmobile <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_armrimmobile_r", "response"])
data_ppt$pcs_music <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_music_r", "response"])
# data_ppt$pcs_pss <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_pss_r", "response"])
data_ppt$pcs_rememeber <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_remember_r", "response"])
data_ppt$pcs_taste <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_taste_r", "response"])
rawdata[rawdata$screen == "pcs_taste_r", "response"]
data_ppt$pcs_handslow <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_handlowering_r", "response"])
data_ppt$pcs_magnetichands <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_magnetichands_r", "response"])
data_ppt$pcs_mosquito <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_mosquito_r", "response"])
data_ppt$pcs_armrigidity <- jsonlite::fromJSON((rawdata[rawdata$screen == "pcs_armrigidity_r", "response"]))
data_ppt$pcs_armimmobile <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_armrimmobile_r", "response"])
data_ppt$pcs_music <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_music_r", "response"])
# data_ppt$pcs_pss <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_pss_r", "response"])
data_ppt$pcs_rememeber <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_remember_r", "response"])
# data_ppt$pcs_taste <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_taste_r", "response"])
# pcs_negative <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_balls_mc", "response"])
#balls_mc -> two collumns with the same name
#postsession experience - > two colums with the same name
# taste - > two columns with the same name
data_ppt
rawdata[rawdata$screen =="pcs_amnesia_w", "response"]
rawdata[rawdata$screen == "pcs_remember_w", "response"]
data_ppt$pcs_amnesia_w <- jsonlite::fromJSON(rawdata[rawdata$screen =="pcs_amnesia_w", "response"])
data_ppt$pcs_remember_w <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_remember_w", "response"])
rawdata[rawdata$screen =="pcs_audiotest", "response"]
rawdata$screen
rawdata
rawdata[rawdata$screen =="AudioTest", "response"]
jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_pcs_audiotest", ]$response)
rawdata[rawdata$screen == "pcs_pcs_audiotest",
jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_audiotest", ]$response)
jsonlite::fromJSON(rawdata[rawdata$screen == "demographic_questions", ]$response)
jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_audiotest", ]$response)
# PCS manipulation
# data_ppt$balls_mc <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_balls_ms", "response"])
hello <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_audiotest", ]$response)
hello
hello <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_audiotest", ]$response)
data_ppt$pcs_hello <- hello$AudioTest
data_ppt$pcs_hello
taste <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_taste_r", ]$response)
taste
negativehallucination
negativehallucination <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_balls_mc", "response"])
jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_balls_mc", "response"])
rawdata[rawdata$screen == "pcs_balls_mc", "response"]
negativehallucination <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_balls_mc", "response"])
path <- "C:/Users/asf25/Box/IllusionPCS/"
# JsPsych experiment ------------------------------------------------------
files <- list.files(path, pattern = "*.csv")
# Progress bar
progbar <- progress_bar$new(total = length(files))
alldata <- data.frame()
for (file in files) {
progbar$tick()
rawdata <- read.csv(paste0(path, "/", file))
# Initialize participant-level data
dat <- rawdata[rawdata$screen == "browser_info", ]
data_ppt <- data.frame(
Participant = file,
Recruitment = dat$researcher,
# Condition = dat$condition,
Experiment_StartDate = as.POSIXct(paste(dat$date, dat$time), format = "%d/%m/%Y %H:%M:%S"),
# Experiment_Duration = rawdata[rawdata$screen == "demographics_debrief", "time_elapsed"] / 1000 / 60,
Browser_Version = paste(dat$browser, dat$browser_version),
Mobile = dat$mobile,
Platform = dat$os,
Screen_Width = dat$screen_width,
Screen_Height = dat$screen_height
)
if("prolific_id" %in% colnames(dat)){
data_ppt$Prolific_ID <- dat$prolific_id
}
data_ppt$Reward <- rawdata[rawdata$screen == "demographics_debrief", "Reward"]
# Demographics
demog <- jsonlite::fromJSON(rawdata[rawdata$screen == "demographic_questions", ]$response)
#Education
demog$Education <- ifelse(demog$Education == "other", demog$`Education-Comment`, demog$Education)
demog$`Education-Comment` <- NULL
# #Discipline
demog$Discipline <- ifelse(!is.null(demog$Discipline), demog$Discipline, NA)
demog$Discipline <- ifelse(demog$Discipline == "other", demog$`Discipline-Comment`, demog$Discipline)
demog$`Discipline-Comment` <- NULL
#ethnicity
demog$Ethnicity <- ifelse(!is.null(demog$Ethnicity), demog$Ethnicity, NA)
demog$Ethnicity <- ifelse(demog$Ethnicity == "other", demog$`Ethnicity-Comment`, demog$Ethnicity)
demog$`Ethnicity-Comment` <- NULL
demog <- as.data.frame(demog)
data_ppt <- cbind(data_ppt, demog)
# PCS ratings
data_ppt$pcs_handslow <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_handlowering_r", "response"])
data_ppt$pcs_magnetichands <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_magnetichands_r", "response"])
data_ppt$pcs_mosquito <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_mosquito_r", "response"])
data_ppt$pcs_armrigidity <- jsonlite::fromJSON((rawdata[rawdata$screen == "pcs_armrigidity_r", "response"]))
data_ppt$pcs_armimmobile <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_armrimmobile_r", "response"])
data_ppt$pcs_music <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_music_r", "response"])
# data_ppt$pcs_pss <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_pss_r", "response"])
data_ppt$pcs_rememeber <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_remember_r", "response"])
taste <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_taste_r", ]$response)
data_ppt$tastesour <- taste$TasteSour_r
data_ppt$tastesweer <- taste$TasteSweer_r
#balls_mc -> two collumns with the same name
#hacllucination - mc
# PCS write up
data_ppt$pcs_amnesia_w <- jsonlite::fromJSON(rawdata[rawdata$screen =="pcs_amnesia_w", "response"])
data_ppt$pcs_remember_w <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_remember_w", "response"])
# PCS manipulation
hello <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_audiotest", ]$response)
data_ppt$pcs_hello <- hello$AudioTest
}
# Generate IDs
ids <- paste0("S", format(sprintf("%03d", 1:nrow(alldata))))
# Sort Participant according to date and assign new IDs
names(ids) <- alldata$Participant[order(alldata$Experiment_StartDate)]
ids
alldata$Participant[order(alldata$Experiment_StartDate)]
alldata$Experiment_StartDate
data_ppt <- data.frame(
Participant = file,
Recruitment = dat$researcher,
# Condition = dat$condition,
Experiment_StartDate = as.POSIXct(paste(dat$date, dat$time), format = "%d/%m/%Y %H:%M:%S"),
# Experiment_Duration = rawdata[rawdata$screen == "demographics_debrief", "time_elapsed"] / 1000 / 60,
Browser_Version = paste(dat$browser, dat$browser_version),
Mobile = dat$mobile,
Platform = dat$os,
Screen_Width = dat$screen_width,
Screen_Height = dat$screen_height
)
Experiment_StartDate
as.POSIXct(paste(dat$date, dat$time), format = "%d/%m/%Y %H:%M:%S"),
as.POSIXct(paste(dat$date, dat$time), format = "%d/%m/%Y %H:%M:%S")
as.POSIXct(paste(dat$date, dat$time), format = "%d/%m/%Y %H:%M:%S")
data_ppt <- data.frame(
Participant = file,
Recruitment = dat$researcher,
# Condition = dat$condition,
Experiment_StartDate = as.POSIXct(paste(dat$date, dat$time), format = "%d/%m/%Y %H:%M:%S"),
# Experiment_Duration = rawdata[rawdata$screen == "demographics_debrief", "time_elapsed"] / 1000 / 60,
Browser_Version = paste(dat$browser, dat$browser_version),
Mobile = dat$mobile,
Platform = dat$os,
Screen_Width = dat$screen_width,
Screen_Height = dat$screen_height
)
Experiment_StartDate
data_ppt
alldata$Participant
alldata <- data.frame()
for (file in files) {
progbar$tick()
rawdata <- read.csv(paste0(path, "/", file))
# Initialize participant-level data
dat <- rawdata[rawdata$screen == "browser_info", ]
data_ppt <- data.frame(
Participant = file,
Recruitment = dat$researcher,
# Condition = dat$condition,
Experiment_StartDate = as.POSIXct(paste(dat$date, dat$time), format = "%d/%m/%Y %H:%M:%S"),
# Experiment_Duration = rawdata[rawdata$screen == "demographics_debrief", "time_elapsed"] / 1000 / 60,
Browser_Version = paste(dat$browser, dat$browser_version),
Mobile = dat$mobile,
Platform = dat$os,
Screen_Width = dat$screen_width,
Screen_Height = dat$screen_height
)
if("prolific_id" %in% colnames(dat)){
data_ppt$Prolific_ID <- dat$prolific_id
}
data_ppt$Reward <- rawdata[rawdata$screen == "demographics_debrief", "Reward"]
# Demographics
demog <- jsonlite::fromJSON(rawdata[rawdata$screen == "demographic_questions", ]$response)
#Education
demog$Education <- ifelse(demog$Education == "other", demog$`Education-Comment`, demog$Education)
demog$`Education-Comment` <- NULL
# #Discipline
demog$Discipline <- ifelse(!is.null(demog$Discipline), demog$Discipline, NA)
demog$Discipline <- ifelse(demog$Discipline == "other", demog$`Discipline-Comment`, demog$Discipline)
demog$`Discipline-Comment` <- NULL
#ethnicity
demog$Ethnicity <- ifelse(!is.null(demog$Ethnicity), demog$Ethnicity, NA)
demog$Ethnicity <- ifelse(demog$Ethnicity == "other", demog$`Ethnicity-Comment`, demog$Ethnicity)
demog$`Ethnicity-Comment` <- NULL
demog <- as.data.frame(demog)
data_ppt <- cbind(data_ppt, demog)
# PCS ratings
data_ppt$pcs_handslow <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_handlowering_r", "response"])
data_ppt$pcs_magnetichands <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_magnetichands_r", "response"])
data_ppt$pcs_mosquito <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_mosquito_r", "response"])
data_ppt$pcs_armrigidity <- jsonlite::fromJSON((rawdata[rawdata$screen == "pcs_armrigidity_r", "response"]))
data_ppt$pcs_armimmobile <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_armrimmobile_r", "response"])
data_ppt$pcs_music <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_music_r", "response"])
# data_ppt$pcs_pss <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_pss_r", "response"])
data_ppt$pcs_rememeber <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_remember_r", "response"])
taste <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_taste_r", ]$response)
data_ppt$tastesour <- taste$TasteSour_r
data_ppt$tastesweer <- taste$TasteSweer_r
#balls_mc -> two collumns with the same name
#hacllucination - mc
# PCS write up
data_ppt$pcs_amnesia_w <- jsonlite::fromJSON(rawdata[rawdata$screen =="pcs_amnesia_w", "response"])
data_ppt$pcs_remember_w <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_remember_w", "response"])
# PCS manipulation
hello <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_audiotest", ]$response)
data_ppt$pcs_hello <- hello$AudioTest
alldata <- rbind(data_ppt, alldata)
}
data_ppt
data_ppt <- cbind(data_ppt, demog)
data_ppt
# PCS ratings
data_ppt$pcs_handslow <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_handlowering_r", "response"])
data_ppt$pcs_magnetichands <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_magnetichands_r", "response"])
data_ppt$pcs_mosquito <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_mosquito_r", "response"])
data_ppt$pcs_armrigidity <- jsonlite::fromJSON((rawdata[rawdata$screen == "pcs_armrigidity_r", "response"]))
data_ppt$pcs_armimmobile <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_armrimmobile_r", "response"])
data_ppt$pcs_music <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_music_r", "response"])
# data_ppt$pcs_pss <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_pss_r", "response"])
data_ppt$pcs_rememeber <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_remember_r", "response"])
taste <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_taste_r", ]$response)
data_ppt$tastesour <- taste$TasteSour_r
data_ppt$tastesweer <- taste$TasteSweer_r
# PCS write up
data_ppt$pcs_amnesia_w <- jsonlite::fromJSON(rawdata[rawdata$screen =="pcs_amnesia_w", "response"])
data_ppt$pcs_remember_w <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_remember_w", "response"])
# PCS manipulation
hello <- jsonlite::fromJSON(rawdata[rawdata$screen == "pcs_audiotest", ]$response)
data_ppt$pcs_hello <- hello$AudioTest
alldata <- rbind(data_ppt, alldata)
alldata
# Generate IDs
ids <- paste0("S", format(sprintf("%03d", 1:nrow(alldata))))
# Sort Participant according to date and assign new IDs
names(ids) <- alldata$Participant[order(alldata$Experiment_StartDate)]
# Replace IDs
alldata$Participant <- ids[alldata$Participant]
alldata$Participant
